// Generated by CoffeeScript 1.7.1
(function() {
  var Airplane,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Airplane = (function() {
    function Airplane(overrides, world) {
      this.overrides = overrides;
      this.world = world;
      this.degInRad = __bind(this.degInRad, this);
      this.update = __bind(this.update, this);
      this.resize = __bind(this.resize, this);
      this.changeKey = __bind(this.changeKey, this);
      this.onKeyUp = __bind(this.onKeyUp, this);
      this.onKeyDown = __bind(this.onKeyDown, this);
      this.onMouseMove = __bind(this.onMouseMove, this);
      this.mouseClick = __bind(this.mouseClick, this);
      this.onMouseUp = __bind(this.onMouseUp, this);
      this.onMouseDown = __bind(this.onMouseDown, this);
      this.setupEventListeners = __bind(this.setupEventListeners, this);
      this.start = __bind(this.start, this);
      this.settings = {
        throttle: 0,
        airSpeed: 0,
        power: 0,
        applyBreaks: true,
        heading: 0,
        rudder: 50,
        flaps: 0,
        trim: 0,
        leftFuel: 75,
        rightFuel: 35,
        airspeed: 0,
        altitude: 16,
        lights: {
          navigation: false,
          landing: false,
          beacon: false,
          strobe: false
        },
        waypoint: {
          airport: "",
          distance: 0,
          estimatedTime: 0
        },
        autoPilot: {
          enabled: false,
          heading: 0,
          speed: 0,
          verticalSpeed: 0
        },
        weight: {
          leftFuelTank: "37kg",
          rightFuelTank: "20kg",
          passengers: "234kg",
          cargo: "4kg"
        }
      };
      this.instruments = {
        pitchValue: 0,
        rollValue: 0,
        turnRollSlider: 0,
        rollSlider: 0,
        pitch: 0,
        heightSlider: 0,
        directionSlider: 0,
        airSpeedSlider: 0,
        slipSlider: 0,
        verticalSpeedSlider: 0,
        yoke: 0
      };
      this.cockpit = window.flightSim2.initCockpit(this.instruments);
      this.world.addAirplane(this);
      this.map = {
        locationX: 100,
        locationY: 100,
        locationZ: 100,
        heading: 0
      };
      this.navigation = window.flightSim2.initNavigation(this.world.camera, this.map);
      this.keymap = {
        arrowUp: false,
        arrowDown: false,
        arrowLeft: false,
        arrowRight: false,
        W: false,
        S: false,
        A: false,
        D: false,
        Space: false,
        X: false,
        B: false,
        Y: false,
        P: false,
        ESC: false,
        G: false,
        H: false,
        T: false,
        Y: false,
        leftMouse: false,
        rightMouse: false,
        mouseWheel: 0,
        mouseX: 0,
        mouseY: 0
      };
    }

    Airplane.prototype.start = function() {
      this.cockpit.reloadWidget();
      return this.setupEventListeners();
    };

    Airplane.prototype.setupEventListeners = function() {
      var container;
      container = this.world.container;
      container.addEventListener('mousemove', this.onMouseMove, false);
      container.addEventListener('mousedown', this.onMouseDown, false);
      container.addEventListener('mouseup', this.onMouseUp, false);
      container.addEventListener('keydown', this.onKeyDown, false);
      return container.addEventListener('keyup', this.onKeyUp, false);
    };

    Airplane.prototype.onMouseDown = function(event) {
      return this.mouseClick(event.button, true);
    };

    Airplane.prototype.onMouseUp = function(event) {
      return this.mouseClick(event.button, false);
    };

    Airplane.prototype.mouseClick = function(button, isDown) {
      switch (button) {
        case 0:
          return this.keymap.leftMouse = isDown;
        case 2:
          return this.keymap.rightMouse = isDown;
        default:
          return console.log("Unknown mouse click");
      }
    };

    Airplane.prototype.onMouseMove = function(event) {
      this.keymap.mouseX = event.pageX;
      return this.keymap.mouseY = event.pageY;
    };

    Airplane.prototype.onKeyDown = function(event) {
      return this.changeKey(event.keyCode, true);
    };

    Airplane.prototype.onKeyUp = function(event) {
      return this.changeKey(event.keyCode, false);
    };

    Airplane.prototype.changeKey = function(keyCode, isDown) {
      switch (keyCode) {
        case 38:
          return this.keymap.arrowUp = isDown;
        case 87:
          return this.keymap.W = isDown;
        case 37:
          return this.keymap.arrowLeft = isDown;
        case 65:
          return this.keymap.A = isDown;
        case 40:
          return this.keymap.arrowDown = isDown;
        case 83:
          return this.keymap.S = isDown;
        case 39:
          return this.keymap.arrowRight = isDown;
        case 68:
          return this.keymap.D = isDown;
        case 32:
          return this.keymap.Space = isDown;
        case 66:
          return this.keymap.B = isDown;
        case 89:
          return this.keymap.Y = isDown;
        case 80:
          return this.keymap.P = isDown;
        case 27:
          return this.keymap.ESC = isDown;
        case 71:
          return this.keymap.G = isDown;
        case 72:
          return this.keymap.H = isDown;
        case 84:
          return this.keymap.T = isDown;
        case 89:
          return this.keymap.Y = isDown;
        default:
          return console.log("Key not found " + keyCode);
      }
    };

    Airplane.prototype.resize = function() {
      return this.cockpit.resize();
    };

    Airplane.prototype.update = function(delta) {
      return console.log("" + delta);
    };

    Airplane.prototype.degInRad = function(deg) {
      return deg * Math.PI / 180;
    };

    return Airplane;

  })();

  if (window.flightSim2 == null) {
    window.flightSim2 = {};
  }

  window.flightSim2.initAirplane = function(overrides, world) {
    var airplane;
    airplane = new Airplane(overrides, world);
    return airplane;
  };

}).call(this);
